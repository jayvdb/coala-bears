environment:
  global:
    PIP_CACHE_DIR: C:\pip_cache
    NUGET_EXE_NO_PROMPT: 1
    NUGET_HTTP_CACHE_PATH: C:\nuget_http_cache
    CHOCO_CACHE_DIR: C:\choco_cache
    PLATFORM: $(PLATFORM)
    MSYS_ROOT: C:\msys64
    MSYS_BIN: $(MSYS_ROOT)\usr\bin
    WIN71_SDK_ROOT: C:\Program Files\Microsoft SDKs\Windows\v7.1
    VS14_VC: C:\Program Files (x86)\Microsoft Visual Studio 14.0\VC
    VS2017: C:\Program Files (x86)\Microsoft Visual Studio\2017
    VS2017_VC: $(VS2017)\Community\VC
    GOPATH: C:\gopath
    JL_PKG: CoalaBears
    JULIA_PROJECT: '@.'
    BEAR_LIST: astyle cppcheck xmllint shellcheck
    TOX_TEST_SELECTORS: pip-npm-gem-go-perl-php-java8-r-adhoc
    # -codecov removed temporarily, in case that caused the builds to fail
    # when php was added
    TOXENV: $(TOXPREFIX)-$(TOX_TEST_SELECTORS)-win-check-noskip
    TOX_PIP_VERSION: 9.0.3
    # Override the temp directory to avoid sed escaping issues
    # See https://github.com/haskell/cabal/issues/5386
    # TMP: c:\tmp
    # ActiveState Perl needs to be in path before msys' perl
    MINGW_BIN: C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\bin
    # R compiler path
    BINPREF: $(MINGW_BIN)\
    PATH: >-
      C:\python;C:\python\Scripts;$(PATH);$(MSYS_BIN);
      %USERPROFILE%\.nuget\packages\fudge\1.3.0\tools;
      $(MINGW_BIN);
      $(GOPATH)\bin;
      $(APPVEYOR_BUILD_FOLDER)\node_modules\.bin;
      $(APPVEYOR_BUILD_FOLDER)\vendor\bin;
      $(MSYS_BIN)\core_perl;
      C:\ruby\bin;
      C:\miniconda;C:\miniconda\Scripts

  matrix:
    - PYTHON_VERSION: 3.4.4
      TOXPREFIX: py34
    - PYTHON_VERSION: 3.6.8
      TOXPREFIX: py36

platform:
  - x64
  - x86

cache:
  - C:\nuget_http_cache
  - C:\choco_cache
  - "C:\\pip_cache"
  - "C:\\Users\\appveyor\\AppData\\Roaming\\nltk_data"
  - "%LOCALAPPDATA%\\Composer"
  - C:\Users\appveyor\AppData\Roaming\cabal\

branches:
  except:
    - /^sils\/.*/

install:
  - python --version
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - node --version
  - which npm
  - npm --version
  - npm config get prefix
  - go version
  - ruby --version
  - dir C:\mingw-w64\
  - dir C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64
  - dir C:\mingw-w64\x86_64-7.2.0-posix-seh-rt_v5-rev1\mingw64\bin
  - exit 1

  - python .ci/fix_path.py
  - refreshenv

  - .ci\vs_appveyor.cmd
  - which cl

  - "%MSYS_BIN%\\date.exe"
  - cp .ci/choco.config C:\ProgramData\chocolatey\config\chocolatey.config

  - nuget install fudge -verbosity quiet
  - ps: fudge install -FudgefilePath .ci/Fudgefile.appveyor
  - choco list --local-only
  - refreshenv
  - echo %PATH%

  - python --version
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""
  - node --version
  - which npm
  - npm --version
  - npm config get prefix
  - ruby --version
  - go version
  - conda --version

  - ps: fudge install
  - refreshenv
  - echo %PATH%

  - .ci/deps.r.cmd

  - node --version
  - which npm
  - npm --version
  - npm config get prefix
  - ruby --version
  - go version
  - conda --version
  - R --version

  # Check that we have the expected version and architecture for Python
  - "python --version"
  - "python -c \"import struct; print(struct.calcsize('P') * 8)\""

  - "%MSYS_BIN%\\date.exe"

  - python -m pip install --upgrade pip==9.0.3 setuptools
  - python -m pip install tox-backticks tox-venv tox-pip-version
    tox-virtualenv-no-download
  - "%MSYS_BIN%\\date.exe"

build: false  # Not a C# project, build stuff at the test step instead.

test_script:
  # Force DOS format, as Checkstyle configs enable NewlineAtEndOfFile,
  # which defaults to CRLF on Windows, and Appveyor CI ignores .gitattributes
  # http://help.appveyor.com/discussions/problems/5687-gitattributes-changes-dont-have-any-effect
  - unix2dos tests/java/test_files/CheckstyleGood.java
  # Clang DLLs x64 were nowadays installed, but the x64 version hangs, so we
  # exclude according tests. See https://github.com/appveyor/ci/issues/495 and
  # https://github.com/appveyor/ci/issues/688

  - "sed -i 's/^envlist.*$/envlist: %TOXENV%/' tox.ini"
  - python -m tox

matrix:
  fast_finish: true

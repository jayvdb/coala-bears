[tox]
envlist = py{34,35,36,37}-{all,pip,npm,gem,go,perl,php,cabal,java,scala,elm,r,dart,julia,lua,infer,opam,apt,adhoc,disabled,win}-{skip,noskip}-codecov
minversion = 3.4
# Doesnt work
#[travis]
#dist =
#  precise: py{34,36}
#  trusty: py{35,36}
#  xenial: py{36,37}

[travis:env]
TRAVIS =
  true: noskip-codecov
TRAVIS_LANGUAGE =
  python: pip
  node_js: py36-npm
  ruby: py36-gem
  haskell: py36-cabal
  go: py36-go
  perl: py36-perl
  php: py36-php
  java: py36-java
  scala: py36-scala
  elm: py36-elm
  r: py36-r
  dart: py36-dart
  julia: py36-julia
# minimal,generic: py36-adhoc
BEARS =
  lua: py36-lua
  infer: py36-infer
  opam: py36-opam
  apt_get: py36-apt-skip
  adhoc: py36-adhoc
  clang: py36-clang
  disabled: py36-disabled

# pyyaml literally here to support get_tests.py
[testenv]
passenv =
  HOME
  PATH
  CI TRAVIS TRAVIS_*
  LOCALAPPDATA
  GEM_HOME
  GEM_PATH
  JULIA_PROJECT
  GOROOT
  GOPATH
  BEARS
  BEAR_LIST
skipsdist = true
skip_install = true
sitepackages = true
list_dependencies_command = python -m pip freeze --local
whitelist_externals =
    echo
    bash
    rm
deps =
    git+https://github.com/coala/coala#egg=coala
    pip: -rbear-requirements.txt
    # These two are needed for some non-pip bears
    !pip: aenum
    !pip: PyYAML
    clang: libclang-py3~=3.4.0
    clang: munkres3~=1.0
    java: language-check~=1.0
    java: guess-language-spirit~=0.5.2
    apt: libclang-py3~=3.4.0
    -rtest-requirements.txt
    !py34: git+https://github.com/krkd/pytest-cov-threshold
    noskip: pytest-error-for-skips
setenv =
    all,pip: PIPBEARS=`python .ci/get_tests.py noreqs pip`
    all,npm: NPMBEARS=`python .ci/get_tests.py npm`
    all,elm: NPMBEARS=`python .ci/get_tests.py elm`
    all,gem: GEMBEARS=`python .ci/get_tests.py gem`
    all,go: GOBEARS=`python .ci/get_tests.py go`
    all,perl: PERLBEARS=`python .ci/get_tests.py perl`
    all,php: PHPBEARS=`python .ci/get_tests.py php`
    all,cabal: CABALBEARS=`python .ci/get_tests.py cabal`
    all,java: JAVABEARS=`python .ci/get_tests.py java`
    all,scala: JAVABEARS=`python .ci/get_tests.py scala`
    all,r: RBEARS=`python .ci/get_tests.py r`
    all,dart: DARTBEARS=`python .ci/get_tests.py dart`
    all,julia: JULIABEARS=`python .ci/get_tests.py julia`
    all,lua: LUABEARS=`python .ci/get_tests.py lua`
    all,opam,infer: OPAMBEARS=`python .ci/get_tests.py opam`
    all,apt: APTBEARS=`python .ci/get_tests.py apt_get`
    adhoc: ADHOCBEARS=`python .ci/get_tests.py {env:BEAR_LIST}`
    disabled: DISABLEDBEARS=`python .ci/get_tests.py --disabled {env:BEAR_LIST}`
    SELECTED={env:PIPBEARS:} {env:NPMBEARS:} {env:GEMBEARS:} {env:GOBEARS:} {env:PERLBEARS:} {env:PHPBEARS:} {env:CABALBEARS:} {env:JAVABEARS:} {env:RBEARS:} {env:DARTBEARS:} {env:JULIABEARS:} {env:LUABEARS:} {env:OPAMBEARS:} {env:APTBEARS:} {env:ADHOCBEARS:} {env:DISABLEDBEARS:}
    noskip: PYTEST_ARGS=--error-for-skips
    py34: PYTEST_ARGS=--deselect=test_valid_async
    collectonly,list: PYTEST_ARGS=--collect-only
commands =
    check,list,all: python .ci/get_bears.py --missing {env:SELECTED}
    java: bash -e -x .ci/deps.coala-bears.sh
    !py34,!apt: python .ci/generate_coverage_thresholds.py {posargs:{env:SELECTED}}
    apt: rm -f .threshold.json
    !list: pytest {env:PYTEST_ARGS:} --cov --continue-on-collection-errors --cov-fail-under=0 --cov-report term-missing:skip-covered --deselect=requirements.txt {posargs:{env:SELECTED}}
commands_post =
    codecov: bash -ec 'flags={envname}; flags="$\{flags//-/,\}"; flags="$\{flags/,codecov/\}"; codecov --name={envname} --flags="$flags"'

[tox]
envlist = py{34,35,36,37}-{all,pip,clang,npm,gem,go,perl,php,cabal,java,java7,java8,scala,elm,r,dart,julia,lua,infer,opam,apt_get,adhoc,disabled,win,swift,mono}-{list,check,collectonly,skip,noskip}-codecov
minversion = 3.4

[travis:env]
TRAVIS =
  true: codecov
TRAVIS_LANGUAGE =
  python: pip-noskip
  node_js: py36-npm-noskip
  ruby: py36-gem-noskip
  haskell: py36-cabal-noskip
  go: py36-go-noskip
  perl: py36-perl-noskip
  php: py36-php-noskip
  scala: py36-scala-noskip
  elm: py36-elm-noskip
  r: py36-r-noskip
  dart: py36-dart-noskip
  julia: py36-julia-noskip
  objective_c: py36-swift-noskip
  swift: py36-swift-noskip
  objectivec: py36-swift-noskip
  objective-c: py36-swift-noskip
  csharp: py36-mono-noskip
  minimal,generic: py36-adhoc-noskip
TRAVIS_JDK_VERSION =
  oraclejdk11: py36-java-skip
  oraclejdk9: py36-java-skip
  oraclejdk8: py36-java8-noskip
  openjdk11: py36-java-skip
  openjdk10: py36-java-skip
  openjdk9: py36-java-skip
  openjdk8: py36-java8-noskip
  openjdk7: py36-java7-noskip
# apt_get is the only group allowed to skip
BEARS =
  apt_get: py36-apt_get-skip
  lua: py36-lua-noskip
  infer: py36-infer-noskip
  opam: py36-opam-noskip
  adhoc: py36-adhoc-noskip
  clang: py36-clang-noskip
  disabled: py36-disabled-noskip

[testenv]
passenv =
  HOME
  PATH
  CI CI_*
  TRAVIS TRAVIS_*
  APPVEYOR APPVEYOR_*
  TOX_*
  PIP_*
  VIRTUALENV_*
  LOCALAPPDATA
  GEM_HOME
  GEM_PATH
  BUNDLE_PATH
  BUNDLE_BIN
  JULIA_PROJECT
  GOROOT
  GOPATH
  BEARS
  BEAR_LIST
  DISABLE_BEARS
  R_PROFILE
  R_LIBS_USER
  R_LIBS_SITE
  _R_CHECK_CRAN_INCOMING_
  NOT_CRAN
  R_PROFILE
pip_version = 9.0.1
alwayscopy = true
skipsdist = true
sitepackages={env:TOXINI_SITEPACKAGES:False}
skip_install = true
list_dependencies_command = python -m pip freeze --local
whitelist_externals =
  pytest
deps =
  git+https://github.com/coala/coala#egg=coala
  pip: -rbear-requirements.txt
  # aenum is needed during test collection
  !pip: aenum
  # PyYAML is needed for two gem bears, but it is already included for pip
  gem-!pip: PyYAML
  npm-!pip: docutils-ast-writer~=0.1.2
  {apt_get,clang,mono,adhoc}-!pip: libclang-py3~=3.4.0
  clang-!pip: munkres3~=1.0
  java{7,8}-!pip: language-check~=1.0
  java{7,8}-!pip: guess-language-spirit~=0.5.2
  -rtest-requirements.txt
  # pytest-cov-threshold is incompatible with py34
  !py34: git+https://github.com/krkd/pytest-cov-threshold
  noskip: pytest-error-for-skips
setenv =
  LINTR_COMMENT_BOT=false
  ENVNAMEBEARS=`python .ci/get_tests.py {envname}`
  PYTEST_DESELECT_ARG=`python .ci/get_tests.py --deselected {envname}`
  adhoc: ADHOCBEARS=`python .ci/get_tests.py {env:BEAR_LIST}`
  disabled: DISABLEDBEARS=`python .ci/get_tests.py --disabled {env:BEAR_LIST}`
  SELECTED={env:ENVNAMEBEARS:} {env:ADHOCBEARS:} {env:DISABLEDBEARS:}
  noskip: PYTEST_ARGS=--error-for-skips
  collectonly,list: PYTEST_ARGS=--collect-only
  codecov: CODECOV_FLAGS=`python .ci/get_codecov_tags.py {envname}`
commands =
  check,list,all: python .ci/get_bears.py --missing {env:SELECTED}
  !py34,!apt_get: python .ci/generate_coverage_thresholds.py {posargs:{env:SELECTED}}
  py34,apt_get: python .ci/generate_coverage_thresholds.py none
  !list: pytest {env:PYTEST_ARGS:} --cov --cov-fail-under=0 --continue-on-collection-errors --cov-report term-missing:skip-covered --deselect=requirements.txt {posargs:{env:SELECTED}} {env:PYTEST_DESELECT_ARG:}
commands_post =
  codecov: codecov --name={envname} --flags={env:CODECOV_FLAGS}

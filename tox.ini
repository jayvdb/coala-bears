[tox]
envlist = py{34,35,36,37}-{all,pip,clang,npm,gem,go,perl,php,cabal,java,java7,java8,scala,elm,r,dart,julia,lua,infer,opam,apt,adhoc,disabled,win,swift,mono}-{list,check,collectonly,skip,noskip}-codecov
minversion = 3.4

[travis:env]
TRAVIS =
  true: codecov
TRAVIS_LANGUAGE =
  python: pip-noskip
  node_js: py36-npm-noskip
  ruby: py36-gem-noskip
  haskell: py36-cabal-noskip
  go: py36-go-noskip
  perl: py36-perl-noskip
  php: py36-php-noskip
  scala: py36-scala-noskip
  elm: py36-elm-noskip
  r: py36-r-noskip
  dart: py36-dart-noskip
  julia: py36-julia-noskip
  objective_c: py36-swift-noskip
  swift: py36-swift-noskip
  objectivec: py36-swift-noskip
  objective-c: py36-swift-noskip
  csharp: py36-mono-noskip
  minimal,generic: py36-adhoc-noskip
TRAVIS_JDK_VERSION =
  oraclejdk11: py36-java-skip
  oraclejdk9: py36-java-skip
  oraclejdk8: py36-java8-noskip
  openjdk11: py36-java-skip
  openjdk10: py36-java-skip
  openjdk9: py36-java-skip
  openjdk8: py36-java8-noskip
  openjdk7: py36-java7-noskip
# apt_get is the only group allowed to skip
BEARS =
  apt_get: py36-apt-skip
  lua: py36-lua-noskip
  infer: py36-infer-noskip
  opam: py36-opam-noskip
  adhoc: py36-adhoc-noskip
  clang: py36-clang-noskip
  disabled: py36-disabled-noskip

# pyyaml literally here to support get_tests.py
[testenv]
passenv =
  HOME
  PATH
  CI CI_*
  TRAVIS TRAVIS_*
  APPVEYOR APPVEYOR_*
  TOX_*
  PIP_*
  VIRTUALENV_*
  LOCALAPPDATA
  GEM_HOME
  GEM_PATH
  JULIA_PROJECT
  GOROOT
  GOPATH
  BEARS
  BEAR_LIST
  DISABLE_BEARS
  R_LIBS_USER
  R_LIBS_SITE
  _R_CHECK_CRAN_INCOMING_
  NOT_CRAN
  R_PROFILE
pip_version = 9.0.1
alwayscopy = true
skipsdist = true
skip_install = true
list_dependencies_command = python -m pip freeze --local
whitelist_externals =
    pytest
    bash
    rm
deps =
    # Doing this inside tox failed once
    # https://travis-ci.org/jayvdb/coala-bears/jobs/547197301
    # hg+https://bitbucket.org/jayvdb/sarge@win-reg-lookup#egg=sarge
    git+https://github.com/coala/coala#egg=coala
    pip: -rbear-requirements.txt
    # These two are needed for some non-pip bears
    !pip: aenum
    !pip: PyYAML
    npm: docutils-ast-writer~=0.1.2
    apt,clang,mono,adhoc: libclang-py3~=3.4.0
    clang: munkres3~=1.0
    java7,java8: language-check~=1.0
    java7,java8: guess-language-spirit~=0.5.2
    -rtest-requirements.txt
    # pytest-cov-threshold is incompatible with py34
    !py34: git+https://github.com/krkd/pytest-cov-threshold
    noskip: pytest-error-for-skips
setenv =
    LINTR_COMMENT_BOT=false
    all,pip: PIPBEARS=`python .ci/get_tests.py noreqs pip`
    all,clang: PIPBEARS=`python .ci/get_tests.py clang`
    all,npm: NPMBEARS=`python .ci/get_tests.py npm`
    all,elm: NPMBEARS=`python .ci/get_tests.py elm`
    all,gem: GEMBEARS=`python .ci/get_tests.py gem`
    all,go: GOBEARS=`python .ci/get_tests.py go`
    all,perl: PERLBEARS=`python .ci/get_tests.py perl`
    all,php: PHPBEARS=`python .ci/get_tests.py php`
    all,cabal: CABALBEARS=`python .ci/get_tests.py cabal`
    all,java8: JAVABEARS=`python .ci/get_tests.py java`
    all,java7: JAVABEARS=`python .ci/get_tests.py java`
    all,java: JAVABEARS=`python .ci/get_tests.py java`
    all,scala: JAVABEARS=`python .ci/get_tests.py scala`
    all,swift: JAVABEARS=`python .ci/get_tests.py swift`
    all,mono: MONOBEARS=`python .ci/get_tests.py mono`
    all,r: RBEARS=`python .ci/get_tests.py r`
    all,dart: DARTBEARS=`python .ci/get_tests.py dart`
    all,julia: JULIABEARS=`python .ci/get_tests.py julia`
    all,lua: LUABEARS=`python .ci/get_tests.py lua`
    all,opam,infer: OPAMBEARS=`python .ci/get_tests.py opam`
    all,apt: APTBEARS=`python .ci/get_tests.py apt_get`
    adhoc: ADHOCBEARS=`python .ci/get_tests.py {env:BEAR_LIST}`
    disabled: DISABLEDBEARS=`python .ci/get_tests.py --disabled {env:BEAR_LIST}`
    SELECTED={env:PIPBEARS:} {env:NPMBEARS:} {env:GEMBEARS:} {env:GOBEARS:} {env:PERLBEARS:} {env:PHPBEARS:} {env:CABALBEARS:} {env:JAVABEARS:} {env:MONOBEARS:} {env:RBEARS:} {env:DARTBEARS:} {env:JULIABEARS:} {env:LUABEARS:} {env:OPAMBEARS:} {env:APTBEARS:} {env:ADHOCBEARS:} {env:DISABLEDBEARS:}
    noskip: PYTEST_ARGS=--error-for-skips
    py34-noskip: PYTEST_ARGS=--error-for-skips -k 'not test_valid_async'
    win-noskip: PYTEST_ARGS=--error-for-skips -k 'not test_language_french and not test_valid_async'
    collectonly,list: PYTEST_ARGS=--collect-only
    codecov: CODECOV_FLAGS=`python .ci/get_codecov_tags.py {envname}`
commands =
    check,list,all: python .ci/get_bears.py --missing {env:SELECTED}
    java: bash -e -x .ci/deps.coala-bears.sh
    !py34,!apt: python .ci/generate_coverage_thresholds.py {posargs:{env:SELECTED}}
    py34,apt: rm -f .threshold.json
    !list: pytest {env:PYTEST_ARGS:} --cov --cov-fail-under=0 --continue-on-collection-errors --cov-report term-missing:skip-covered --deselect=requirements.txt {posargs:{env:SELECTED}}
    codecov: codecov --name={envname} --flags={env:CODECOV_FLAGS}
# Use commands_post =

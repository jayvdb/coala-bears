[tox:old]
envlist = py{34,35,36,37}-pip-npm-gem-go-perl-php-cabal-java-r-dart-julia-lua-opam-apt

[tox]
envlist = py{34,35,36,37}-{pip,npm,gem,go,perl,php,cabal,java,r,dart,julia,lua,opam,apt}

[travis:env]
TRAVIS_LANGUAGE =
  python: pip
  node_js: npm
  ruby: gem
  haskell: cabal
  go: go
  perl: perl
  php: php
  java: java
  r: r
  dart: dart
  julia: julia
BEARS =
  lua: lua
  opam: opam
  apt: apt

# pyyaml literally here to support get_tests.py
[testenv]
passenv =
  TRAVIS_LANGUAGE
  BEARS
skipsdist = true
skip_install = true
sitepackages = true
list_dependencies_command = python -m pip freeze --local
whitelist_externals = echo
deps =
    git+https://github.com/coala/coala#egg=coala
    # These two are needed for some non-pip bears
    !pip: aenum
    !pip: PyYAML
    pip: -rbear-requirements.txt
    -rtest-requirements.txt
    git+https://github.com/krkd/pytest-cov-threshold
setenv =
    pip: PIPBEARS=`python .ci/get_tests.py noreqs pip`
    npm: NPMBEARS=`python .ci/get_tests.py npm`
    gem: GEMBEARS=`python .ci/get_tests.py gem`
    go: GOBEARS=`python .ci/get_tests.py go`
    perl: PERLBEARS=`python .ci/get_tests.py perl`
    php: PHPBEARS=`python .ci/get_tests.py php`
    cabal: CABALBEARS=`python .ci/get_tests.py cabal`
    java: JAVABEARS=`python .ci/get_tests.py java`
    r: RBEARS=`python .ci/get_tests.py r`
    dart: DARTBEARS=`python .ci/get_tests.py dart`
    julia: JULIABEARS=`python .ci/get_tests.py julia`
    lua: LUABEARS=`python .ci/get_tests.py lua`
    opam: OPAMBEARS=`python .ci/get_tests.py opam`
    apt: APTBEARS=`python .ci/get_tests.py apt_get`
    SELECTED={env:PIPBEARS:} {env:NPMBEARS:} {env:GEMBEARS:} {env:GOBEARS:} {env:PERLBEARS:} {env:PHPBEARS:} {env:CABALBEARS:} {env:JAVABEARS:} {env:RBEARS:} {env:DARTBEARS:} {env:JULIABEARS:} {env:LUABEARS:} {env:OPAMBEARS:} {env:APTBEARS:}
commands =
    python .ci/generate_coverage_thresholds.py {posargs:{env:SELECTED}}
    pytest --continue-on-collection-errors --cov-fail-under=0 --cov-report term-missing:skip-covered --deselect=requirements.txt {posargs:{env:SELECTED}}

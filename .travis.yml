sudo: false

dist: trusty

matrix:
  include:
    - language: generic
      env: DIST=precise
      dist: precise
      addons:
        apt:
          sources:
            - deadsnakes
          packages:
            - chktex
            - cppcheck
            - flawfinder
            - indent
            - hlint
            - libperl-critic-perl
            - libxml2-utils
            - mono-mcs
            - php-codesniffer
            - python3.4
            - verilator
    - language: generic
      env: DIST=trusty
      dist: trusty
      addons:
        apt:
          packages:
            - chktex
            - cppcheck
            - flawfinder
            - indent
            - hlint
            - libperl-critic-perl
            - libxml2-utils
            - mono-mcs
            - php-codesniffer
            - verilator
    - language: generic
      env: DIST=debian-sid
      dist: trusty
      addons:
        apt:
          sources:
            - debian-sid
          packages:
            - chktex
            - cppcheck
            - flawfinder
            - indent
            - hlint
            - libperl-critic-perl
            - libxml2-utils
            - mono-mcs
            - php-codesniffer
            - verilator

cache:
  pip: true
  directories:
    # Installed language package caches
    - ~/.cabal
    - ~/R/Library
    - ~/.julia
    - $TRAVIS_BUILD_DIR/node_modules
    - $TRAVIS_BUILD_DIR/.bundle
    - $TRAVIS_BUILD_DIR/vendor
    # coala managed data
    - ~/nltk_data
    - ~/.local/share/coala-bears
    # .deb cache
    - ~/.apt-cache
    # Installed linters
    - ~/infer-linux64-v0.7.0
    - ~/pmd-bin-5.4.1
    - ~/bakalint-0.4.0
    - ~/dart-sdk/bin
    - ~/.local/tailor/

env:
  global:
    - CIRCLE_NODE_INDEX=-1  # Avoid accidentially being a CircleCI worker
    - USE_PPAS="marutter/rdev staticfloat/juliareleases ondrej/golang"
    - R_LIB_USER=~/R/Library
    - LINTR_COMMENT_BOT=false
    - TRAVIS_GHC_ROOT=/opt/ghc
    - PATH="/opt/cabal/1.24/bin:/opt/happy/1.19.3/bin:$HOME/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/dart-sdk/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v0.7.0/infer/bin:$HOME/pmd-bin-5.4.1/bin:$HOME/bakalint-0.4.0:$HOME/.local/tailor/tailor-latest/bin"

before_install:
  - >
    if [[ -z "$TRAVIS_PYTHON_VERSION" ]]; then
      mkdir -p $HOME/bin
      echo pip3.4 is $(which pip3.4)
      echo python3.4 is $(which python3.4)
      if [[ -n "$(which pip3.4)" ]]; then ln -sf $(which pip3.4) $HOME/bin/pip3; fi
      if [[ -n "$(which python3.4)" ]]; then ln -sf $(which python3.4) $HOME/bin/python3; fi
      echo pip3.5 is $(which pip3.5)
      echo python3.5 is $(which python3.5)
      if [[ -n "$(which pip3.5)" ]]; then ln -sf $(which pip3.5) $HOME/bin/pip3; fi
      if [[ -n "$(which python3.5)" ]]; then ln -sf $(which python3.5) $HOME/bin/python3; fi
      echo pip3 is $(which pip3)
      echo python3 is $(which python3)
      if [[ -n "$(which python3)" ]]; then ln -sf $(which python3) $HOME/bin/python; fi
      python --version
      # Needed as some hosts may be providing python 3.2
      wget https://bootstrap.pypa.io/get-pip.py
      python get-pip.py --user
      rm get-pip.py
      cp $HOME/.local/bin/pip $HOME/.local/bin/pip3
      cp $HOME/.local/bin/pip $HOME/bin/pip
      cp $HOME/.local/bin/pip $HOME/bin/pip3
      pip --version
    fi

  # Change environment for flawfinder from python to python2
  - if [[ -n "$(which flawfinder)" ]]; then
      sed -e '1s/.*/#!\/usr\/bin\/env python2/' $(which flawfinder) > $HOME/bin/flawfinder;
      chmod a+x $HOME/bin/flawfinder;
    fi
  # Remove Ruby directive from Gemfile as this image has 2.2.5
  - sed -i '/^ruby/d' Gemfile
  - mkdir -p ~/.apt-cache
  - if [[ "$BEARS" == "all" ]]; then nvm install 4; nvm use 4; bash .ci/deps.sh; fi
  - if [[ "$BEARS" == "all" ]]; then bash .ci/deps.shellcheck.sh; fi
  # https://github.com/coala/coala/issues/3183
  - cp requirements.txt requirements.orig
  - cat test-requirements.txt docs-requirements.txt >> requirements.txt
  - >
    if [[ "$TRAVIS_LANGUAGE" == "python" ]]; then
      cat bear-requirements.txt >> requirements.txt;
    elif [[ "$TRAVIS_LANGUAGE" == "ruby" ]]; then
      echo 'pyyaml' > bear-requirements.txt;
    else
      rm bear-requirements.txt; touch bear-requirements.txt;
    fi
  - sed -i '/^-r/d' requirements.txt
  # On unsupported versions, coala will be installed in the `script` block
  - >
    if [[ "$UNSUPPORTED" == true ]]; then
      sed -e '/^coala/d' requirements.txt > requirements.new
      mv requirements.new requirements.txt
      BEARS=none
    fi
  - if [[ -z "$TRAVIS_PYTHON_VERSION" ]]; then pip install --user -r requirements.txt; fi
  - >
    if [[ "$TRAVIS_LANGUAGE" == "haskell" ]]; then
      sed -i 's/-- force-reinstalls: False/force-reinstalls: True/' /home/travis/.cabal/config
      sed -i 's/-- max-backjumps: 200/max-backjumps: 1000/' /home/travis/.cabal/config
      if [[ -n "$(which ghc-mod)" && -n "$(which hlint)" && -n "$(which shellcheck)" ]]; then
        sed -i 's/build-depends: .*/build-depends: base, Cabal/' coala.cabal
      fi
    fi

before_script:
  - if [[ "$TRAVIS_LANGUAGE" == "go" ]]; then
      grep ImportPath Godeps/Godeps.json | cut -d '"' -f 4 | grep '[a-z]' | xargs go get;
    fi
  - mv requirements.orig requirements.txt
  # nltk 3.2.2 dropped support for Python 3.3
  - >
    if [[ "$TRAVIS_LANGUAGE" == "python" ]]; then
      python -m nltk.downloader punkt maxent_treebank_pos_tagger averaged_perceptron_tagger
    fi
  # Only keep non-Python bears on Python 3.4
  - bash .ci/bears.prune.sh
  # Delete tests for removed bears
  - bash .ci/tests.prune.sh

script:
  - >
    if [[ "$UNSUPPORTED" == true ]]; then
      set -e
      python setup.py install | tee setup.err
      grep -q 'coala supports only python 3.4 or later' setup.err
      if grep -q 'Traceback (most recent call last)' setup.err; then
        false
      fi
    fi
  - if [[ "$UNSUPPORTED" == true ]]; then exit; fi
  - coverage run setup.py bdist_wheel
  - >
    if [[ "$TRAVIS_LANGUAGE" == "python" ]]; then
      pip install $(ls ./dist/*.whl)"[alldeps]"
    else
      pip install --user $(ls ./dist/*.whl)
    fi
  - bash .ci/tests.sh
  # Ensure bear requirements are in sync with the bear PipRequirement
  - .ci/generate_bear_requirements.py
  - >
    if [[ "$TRAVIS_LANGUAGE" == "python" ]]; then
      (cat bear-requirements.txt; echo "pyyaml~=3.12") | sort -u > bear-requirements.tmp
      mv bear-requirements.tmp bear-requirements.txt
      git diff --exit-code bear-requirements.txt
    fi
  - >
    if [[ "$TRAVIS_LANGUAGE" == "ruby" ]]; then
      git diff --exit-code Gemfile
    fi
  - >
    if [[ "$TRAVIS_LANGUAGE" == "node_js" ]]; then
      git diff --exit-code package.json
    fi
  # https://github.com/coala/coala-bears/issues/1037
  - >
    if [[ "$TRAVIS_PULL_REQUEST" != "false" ]]; then
      sed -e '/bears = GitCommitBear/d' .coafile > .coafile.new
      mv .coafile.new .coafile
    fi
  - coala --non-interactive
  - bash .ci/deploy.coverage.sh
  - rm -rf docs/API && make -C docs clean
  - python setup.py docs

notifications:
  email: false

branches:
  exclude:
    - /^sils\//

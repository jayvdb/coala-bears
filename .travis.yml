sudo: false

dist: xenial

language: python

.disable_lang: &disable_lang
  addons: false
  python: false
  cache: pip
  install: false
  after_success: false
  after_failure: false
  before_deploy: false
  deploy: false

.disable_global: &disable_global
  addons: false
  python: false
  cache: pip
  before_install: false
  install: false
  before_script: false
  script: false
  after_success: false
  after_failure: false
  before_deploy: false
  deploy: false

stages:
  - name: sentinel
    if: branch != master OR type = pull_request
  - test
  - moban
  - name: unsupported
    if: branch = master AND type = push

.check_moban: &check_moban
  <<: *disable_global
  python: 3.6
  stage: moban
  install: pip install moban
  script: .ci/check_moban.sh
  if: branch != master OR type = pull_request

jobs:
  include:
    - stage: sentinel
      # All other jobs will be cancelled if the sentinel job fails
      <<: *disable_global
      python: 3.6
      install: pip install -r requirements.txt ".[alldeps]"
      script: coala --non-interactive -V

    - python: 2.7
      stage: unsupported
      env: PIP_NO_COMPILE=1
      addons: false
      before_install: true
      install: pip install 3to2
      before_script: true
      script: .ci/check_unsupported.sh
    - python: 3.3
      stage: unsupported
      env: PIP_NO_COMPILE=1
      addons: false
      before_install: true
      install: true
      before_script: true
      script: .ci/check_unsupported.sh
    - python: 3.6
      stage: moban
      addons: false
      cache: pip
      before_install: false
      install: pip install moban
      before_script: false
      script: .ci/check_moban.sh
      after_success: false
      after_failure: false
      if: branch = master AND type = push

    - language: python
      stage: test
      python: 3.4
      addons:
        apt:
          packages: clang-3.4

    - language: python
      python: 3.5
      addons:
        apt:
          packages: clang-3.4

    - <<: *disable_lang
      language: node_js
      node_js: 4
    - <<: *disable_lang
      language: node_js
      node_js: 5
    - <<: *disable_lang
      language: node_js
      node_js: 6

    - <<: *disable_lang
      language: ruby
      rvm: 2.2
    - <<: *disable_lang
      language: ruby
      rvm: 2.1
    - <<: *disable_lang
      language: ruby
      rvm: 2.0

    - <<: *disable_lang
      language: haskell
      ghc: 8.0.2
      dist: precise
      addons:
        apt:
          sources:
            - deadsnakes
            - hvr-ghc
          packages:
            - cabal-install-1.24
            - ghc-8.0.2
            - happy-1.19.3
            - python3.4

    - <<: *disable_lang
      language: java
      jdk: oraclejdk8

    - <<: *disable_lang
      language: java
      jdk: openjdk7
    - <<: *disable_lang
      language: java
      jdk: openjdk6

    - <<: *disable_lang
      language: r
    - <<: *disable_lang
      language: dart
    - <<: *disable_lang
      language: julia
    - <<: *disable_lang
      language: php
    - <<: *disable_lang
      language: perl
    # go 1.5 isnt supported by all go linters
    - <<: *disable_lang
      language: go
      go: 1.6
    - <<: *disable_lang
      language: go
      go: 1.7

    - <<: *disable_lang
      language: bash
      env: BEARS=lua
      addons:
        apt:
          packages:
            - luarocks

    - <<: *disable_lang
      language: bash
      env: BEARS=opam
      addons:
        apt:
          sources:
            - avsm
          packages:
            - ocaml
            - opam

    - <<: *disable_lang
      language: generic
      env: DIST=precise
      dist: precise
      addons:
        apt:
          sources:
            - deadsnakes
            - hvr-ghc
          packages:
            - cabal-install-1.24
            - ghc-8.0.2
            - happy-1.19.3
            - chktex
            - cppcheck
            - flawfinder
            - indent
            - libperl-critic-perl
            - libxml2-utils
            - mono-mcs
            - php5-cli
            # php-codesniffer  # linter error?
            - python3.4
            - verilator

    - <<: *disable_lang
      language: generic
      env: DIST=trusty
      dist: trusty
      addons:
        apt:
          packages:
            - chktex
            - cppcheck
            - flawfinder
            - indent
            - libperl-critic-perl
            - libxml2-utils
            - mono-mcs
            - php5-cli
            - php-codesniffer
            - verilator

    - <<: *disable_lang
      language: generic
      env: DIST=debian-sid
      dist: trusty
      addons:
        apt:
          sources:
            - debian-sid
          packages:
            - chktex
            - cppcheck
            - flawfinder
            - indent
            - libxml2-utils
            - verilator
            # Causes error during apt-get install:
            # libperl-critic-perl
            # mono-mcs
            # php5-cli
            # php-codesniffer
    - <<: *disable_lang
      language: generic
      env: DIST=xenial
      dist: trusty
      sudo: required
    - <<: *disable_lang
      language: generic
      env: DIST=yakkety
      dist: trusty
      sudo: required
    - <<: *disable_lang
      language: generic
      env: DIST=zesty
      dist: trusty
      sudo: required

    - *check_moban
  allow_failures:
    - *check_moban

.apt_sources: &apt_sources
  - ubuntu-toolchain-r-test
  - avsm  # OPAM stable
  - hvr-ghc  # Haskell
  - sourceline:  # R
      deb https://cloud.r-project.org/bin/linux/ubuntu trusty-cran35/
    key_url:
      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x51716619E084DAB9
  - sourceline:  # Julia
      deb http://ppa.launchpad.net/staticfloat/juliareleases/ubuntu trusty main
    key_url:
      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0xCF979FFA3D3D3ACC
  - sourceline:  # Go
      deb http://ppa.launchpad.net/ondrej/golang/ubuntu trusty main
    key_url:
      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x4F4EA0AAE5267A6C
  - sourceline:  # astyle
      deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main
    key_url:
      https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C

addons:
  apt:
    sources: *apt_sources

cache:
  pip: true
  directories:
    - docs/_build
    # Installed language package caches
    - ~/.cabal
    - ~/.ghc
    - ~/.ghc-mod
    - ~/R/Library
    - ~/.julia
    - ~/.luarocks
    - $TRAVIS_BUILD_DIR/node_modules
    - $TRAVIS_BUILD_DIR/.bundle
    - $TRAVIS_BUILD_DIR/vendor
    # coala managed data
    - ~/nltk_data
    # Installed linters
    - ~/infer-linux64-v$INFER_VERSION
    - ~/.local/

env:
  global:
    - TERM=dumb
    - R_LIB_USER=~/R/Library
    - LINTR_COMMENT_BOT=false
    - CABAL_VERSION=1.24
    - INFER_VERSION=0.7.0
    - PATH="$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin"
    - TRAVIS_GHC_ROOT=/opt/ghc

before_install:
  # Remove Ruby directive from Gemfile as this image has 2.2.5
  - sed -i '/^ruby/d' Gemfile
  # should exist
  # mkdir -p $HOME/bin/
  - .ci/deps.apt-new.sh
  - if [[ "$DIST" == "trusty" || "$DIST" == "debian-sid" ]]; then
      ln -s /usr/bin/php $HOME/bin/;
    fi

  - .ci/deps.python.sh

  # Remove Ruby directive from Gemfile as this image has 2.2.5
  - sed -i '/^ruby/d' Gemfile
  - if [[ "$BEARS" == "all" ]]; then
      nvm install 4; nvm use 4; bash .ci/deps.sh;
    fi
  - if [[ "$BEARS" == "all" ]]; then bash .ci/deps.cabal.sh; fi
  # https://github.com/coala/coala/issues/3183
  - cp requirements.txt requirements.orig
  - printf '%s\n%s\n%s\n'
           "$(cat test-requirements.txt)"
           "$(grep -v '^-r' docs-requirements.txt)"
           "$(cat requirements.txt)"
           > requirements.txt
  - >
    if [[ "$TRAVIS_LANGUAGE" == "python" ]]; then
      cat bear-requirements.txt >> requirements.txt;
    elif [[ "$TRAVIS_LANGUAGE" == "ruby" ]]; then
      echo 'pyyaml' > bear-requirements.txt;
    else
      rm bear-requirements.txt; touch bear-requirements.txt;
    fi
  - sed -i '/^-r/d' requirements.txt
  - if [[ -z "$TRAVIS_PYTHON_VERSION" ]]; then
      pip install --user -r requirements.txt;
    fi

before_script:
  - if [[ "$TRAVIS_LANGUAGE" == "go" ]]; then
      .ci/deps.go.sh;
    fi
  - if [[ "$TRAVIS_LANGUAGE" == "php" ]]; then
      pear install pear/PHP_CodeSniffer;
      phpenv rehash;
    fi
  # Force ghc-mod to resolve its Cabal version
  - if [[ "$TRAVIS_LANGUAGE" == "haskell" ]]; then
      ~/.cabal/bin/ghc-mod modules ;
    fi
  - if [[ "$TRAVIS_LANGUAGE" == "julia" ]]; then
      julia -e "Pkg.add(\"Lint\")";
    fi
  - if [[ "$TRAVIS_LANGUAGE" == "java" ]]; then
      bash .ci/deps.java.sh;
    fi
  - if [[ "$BEARS" == "opam" ]]; then
      bash .ci/deps.opam.sh;
    fi
  - if [[ "$BEARS" == "lua" ]]; then
      luarocks install --local --deps-mode=none luacheck;
    fi
  - if [[ "$TRAVIS_LANGUAGE" == "perl" ]]; then
      .ci/deps.perl.sh;
    fi
  - mv requirements.orig requirements.txt
  - .ci/deps.coala-bears.sh
  # nltk 3.2.2 dropped support for Python 3.3
  - >
    if [[ -n "$TRAVIS_PYTHON_VERSION" && "$TRAVIS_PYTHON_VERSION" != "3.3" ]];
    then
      python -m nltk.downloader \
        punkt maxent_treebank_pos_tagger averaged_perceptron_tagger;
    fi
  # Only keep non-Python bears on Python 3.4
  - bash .ci/bears.prune.sh
  # Delete tests for removed bears
  - bash .ci/tests.prune.sh

script:
  - python setup.py bdist_wheel
  - >
    if [[ "$TRAVIS_LANGUAGE" == "python" ]]; then
      pip install $(ls ./dist/*.whl)"[alldeps]";
    else
      pip install --user $(ls ./dist/*.whl);
    fi
  - pytest
  # Ensure bear requirements are in sync with the bear PipRequirement
  - .ci/generate_bear_requirements.py --check --update
  - >
    if [[ "$TRAVIS_LANGUAGE" == "python" ]]; then
      (cat bear-requirements.txt; echo "pyyaml~=3.12") \
        > | sort -u > bear-requirements.tmp;
      mv bear-requirements.tmp bear-requirements.txt;
      git diff --exit-code bear-requirements.txt;
    fi
  - >
    if [[ "$TRAVIS_LANGUAGE" == "ruby" ]]; then
      git diff --exit-code Gemfile;
    fi
  - >
    if [[ "$TRAVIS_LANGUAGE" == "node_js" ]]; then
      git diff --exit-code package.json;
    fi
  - coala --non-interactive
  - codecov
  - python setup.py docs

notifications:
  email: false

branches:
  exclude:
    - /^sils\//

sudo: false
dist: xenial

language: python
python:
  - 3.4
  - 3.5

.disable_global: &disable_global
  addons: false
  cache: pip
  before_install: false
  install: false
  before_script: false
  script: false
  after_success: false
  after_failure: false
  before_deploy: false
  deploy: false

stages:
  - test
  - moban
  - name: unsupported
    if: branch = master AND type = push

.check_moban: &check_moban
  <<: *disable_global
  python: 3.6
  stage: moban
  install: pip install moban
  script: .ci/check_moban.sh
  if: branch != master OR type = pull_request

jobs:
  include:
    - python: 2.7
      stage: unsupported
      env: PIP_NO_COMPILE=1
      addons: false
      before_install: true
      install: pip install 3to2
      before_script: true
      script: .ci/check_unsupported.sh
    - python: 3.3
      stage: unsupported
      env: PIP_NO_COMPILE=1
      addons: false
      before_install: true
      install: true
      before_script: true
      script: .ci/check_unsupported.sh
    - python: 3.6
      stage: moban
      addons: false
      cache: pip
      before_install: false
      install: pip install moban
      before_script: false
      script: .ci/check_moban.sh
      after_success: false
      after_failure: false
      if: branch = master AND type = push
    - *check_moban
  allow_failures:
    - *check_moban

.apt_sources: &apt_sources
  - avsm  # OPAM stable
  - hvr-ghc  # Haskell

addons:
  apt:
    sources: *apt_sources
    packages:
      - aspcud
      - astyle
      - cabal-install-1.24
      - camlp4-extra
      - chktex
      - clang-3.8
      - cppcheck
      - devscripts
      - flawfinder
      - gfortran
      - ghc
      - golang-go
      - happy
      - indent
      - julia
      - libarpack2
      - libblas-dev
      - libfftw3-3
      - liblapack-dev
      - libopenblas-base
      - libpaper-utils
      - libperl-critic-perl
      - libxml2-utils
      - luarocks
      - mercurial
      - menhir
      - mono-mcs
      - ocaml
      - opam
      - php-codesniffer
      - r-base-core
      - verilator

cache:
  pip: true
  directories:
    - docs/_build
    # Installed language package caches
    - ~/.cabal
    - ~/.ghc
    - ~/.ghc-mod
    - ~/R/Library
    - ~/.julia
    - ~/.luarocks
    - $TRAVIS_BUILD_DIR/node_modules
    - $TRAVIS_BUILD_DIR/.bundle
    - $TRAVIS_BUILD_DIR/vendor
    # coala managed data
    - ~/nltk_data
    # Installed linters
    - ~/infer-linux64-v$INFER_VERSION
    - ~/.local/

env:
  global:
    - TERM=dumb
    - R_LIB_USER=~/R/Library
    - LINTR_COMMENT_BOT=false
    - CABAL_VERSION=1.24
    - INFER_VERSION=0.7.0
    - PATH="$HOME/.local/bin:/opt/cabal/$CABAL_VERSION/bin:$PATH:$TRAVIS_BUILD_DIR/node_modules/.bin:$TRAVIS_BUILD_DIR/vendor/bin:$HOME/.cabal/bin:$HOME/infer-linux64-v$INFER_VERSION/infer/bin:$HOME/.local/tailor/tailor-latest/bin:$HOME/.luarocks/bin"

before_install:
  - nvm install 8
  # Remove Ruby directive from Gemfile as this image has 2.2.5
  - sed -i '/^ruby/d' Gemfile
  - .ci/deps.opam.sh
  - .ci/deps.sh
  - .ci/deps.go.sh
  - .ci/deps.cabal.sh
  - .ci/deps.r.sh
  - .ci/deps.java.sh
  # https://github.com/coala/coala/issues/3183
  - cp requirements.txt requirements.orig
  - printf '%s\n%s\n%s\n'
           "$(cat test-requirements.txt)"
           "$(grep -v '^-r' docs-requirements.txt)"
           "$(cat bear-requirements.txt requirements.txt)"
           > requirements.txt

before_script:
  - mv requirements.orig requirements.txt
  - .ci/deps.coala-bears.sh

script:
  - python setup.py bdist_wheel
  - pip install $(ls ./dist/*.whl)"[alldeps]"
  - pytest
  # Ensure bear requirements are in sync with the bear PipRequirement
  - .ci/generate_bear_requirements.py --check --update
  - coala --non-interactive
  - codecov
  - python setup.py docs

notifications:
  email: false

branches:
  exclude:
    - /^sils\//

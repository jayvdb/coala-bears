- stage: test-languages
  language: lua
  env: BEARS=lua
  addons:
    apt:
      packages:
        - luarocks

- stage: test-languages
  language: generic
  dist: trusty
  env: BEARS=opam INFER_VERSION=0.7.0
       PATH=$PATH:$HOME/infer-linux64-v$INFER_VERSION/infer/bin
  addons:
    apt:
      sources:
        - avsm
      packages:
        - camlp4-extra
        - ocaml
        - opam

- stage: test-languages
  # This is in generic image, as language: haskell isnt working yet
  # https://github.com/coala/coala-bears/issues/1384
  language: generic
  dist: xenial
  env: DIST=xenial BEARS=adhoc BEAR_LIST="ghc-mod"
  # ghc-mod needs parts of ghc, specifically at least /usr/lib/ghc/settings
  # ghc-mod needs cabal-install
  addons:
    apt:
      packages:
        - cabal-install
        - ghc
        - ghc-mod

- stage: test-languages
  language: generic
  dist: xenial
  env: DIST=xenial BEARS=adhoc BEAR_LIST="apt_get bakalint default-jre"
       DISABLE_BEARS="astyle flawfinder ghc-mod r_script shellcheck"
  # astyle and shellcheck are failing in xenial
  # xenial doesnt have Python 2.7 needed for flawfinder
  # R bears and ghc_mod use separate jobs
  addons:
    apt:
      packages:
        - chktex
        - cppcheck
        - devscripts
        - hlint
        - indent
        - libperl-critic-perl
        - libxml2-utils
        - mono-mcs
        - php7.0-cli
        - phpmd
        - php-codesniffer
        - verilator

- stage: test-languages
  language: generic
  dist: trusty
  env: DIST=trusty BEARS=adhoc BEAR_LIST="astyle flawfinder shellcheck"
  addons:
    apt:
      sources:
        - sourceline:  # astyle
            deb http://ppa.launchpad.net/cs50/ppa/ubuntu trusty main
          key_url:
            https://keyserver.ubuntu.com/pks/lookup?op=get&search=0x5BDA2E974A0E822C
      packages:
        - astyle
        - flawfinder
        - shellcheck

# Additonal manual entries
- stage: test-other-versions
  os: windows
  language: bash
  python: 3.6.8
  env:
    BEAR_LIST="astyle cppcheck xmllint"
    TOX_TEST_SELECTORS=pip-noreqs-npm-gem-go-perl-php-java8-adhoc
  cache:
    directories:
      - C:/nuget_http_cache/
      - C:/choco_cache/
      - C:/pip_cache/
  before_install:
    - bash --version
    - powershell -c "Set-ExecutionPolicy -ExecutionPolicy Unrestricted
                                         -Scope LocalMachine"
    - powershell .ci/travis_init.ps1

    - export NUGET_HTTP_CACHE_PATH=/C/nuget_http_cache
    - export CHOCO_CACHE_DIR=/C/choco_cache
    - export PIP_CACHE_DIR=/C/pip_cache

    - source .ci/travis_extra_globals.sh

    - export TOXENV=py36-${TOX_TEST_SELECTORS}-${TOX_FEATURES}-win

    - printenv

    - cp .ci/choco.config $ChocolateyInstall/config/chocolatey.config

    - python .ci/store_env_in_registry.py
    - source .ci/refreshenv.sh

    # TODO: Add support for disabling pre-installed vctools which is
    # disabled in choco_requirements.  Uninstalling vctools fails
  install:
    - powershell -c ". .ci/Fudge.ps1 install"
    - refreshenv
    - taskkill -IM "gpg-agent.exe" || true
  before_script:
    - python --version
    - cp tox.ini tox.orig
    - "sed -i 's/^envlist.*$/envlist: '$TOXENV/ tox.ini"
    - export TOX_SITEPACKAGES=true
    - export VIRTUALENV_NO_PIP=1
    - export VIRTUALENV_NO_SETUPTOOLS=1
    - pip uninstall tox-venv || true
    # Avoid verify_gemfile_dependencies_are_found errors due to
    # Gemfile modifications in .ci/deps.ruby-packages.ps1
    - cp Gemfile.win Gemfile
  script:
    - python -m tox --sitepackages
  after_script:
    - cp tox.orig tox.ini
    - cp Gemfile.orig Gemfile

- stage: test-other-versions
  language: ruby
  rvm: 2.5
  cache: bundler
  env: DISABLE_BEARS=csvlint

- stage: test-other-versions
  language: java
  jdk: openjdk11
  env: DISABLE_BEARS="languagetool tailor"
# openjdk10 and openjdk9 are broken on Travis
# https://github.com/travis-ci/travis-cookbooks/issues/976
# They need the same configuration as openjdk11:
# env: DISABLE_BEARS="languagetool tailor"
- stage: test-other-versions
  language: java
  jdk: openjdk7
  dist: trusty
  env: DISABLE_BEARS=tailor

# BEARS=apt_get allows matching bears to be skipped
- stage: test-other-versions
  language: generic
  dist: bionic
  # https://travis-ci.community/t/apt-addon-broken-on-bionic/4061
  env: DIST=bionic BEARS=apt_get DISABLE_BEARS=shellcheck

- stage: test-other-versions
  language: generic
  env: DIST=trusty BEARS=apt_get
  dist: trusty
  addons:
    apt:
      packages:
        - chktex
        - cppcheck
        - devscripts
        - indent
        - libperl-critic-perl
        - libxml2-utils
        - mono-mcs
        - php5-cli
        - php-codesniffer
        - verilator

- stage: test-other-versions
  language: generic
  env: DIST=precise BEARS=apt_get
  cache:
    directories:
      - $HOME/.pyenv
  dist: precise
  addons:
    apt:
      packages:
        - chktex
        - cppcheck
        - devscripts
        - indent
        - libperl-critic-perl
        - libxml2-utils
        - mono-mcs
        - php5-cli
        - python3
        - verilator

- python: 2.7
  language: python
  stage: test-other-versions
  env: PIP_NO_COMPILE=1
  addons: false
  before_install: true
  install: pip install 3to2
  before_script: true
  script: .ci/check_unsupported.sh
- python: 3.3
  language: python
  stage: test-other-versions
  dist: trusty
  env: PIP_NO_COMPILE=1
  addons: false
  before_install: skip
  install: skip
  before_script: skip
  script: .ci/check_unsupported.sh

- python: 3.6
  language: python
  stage: sentinel
  addons: false
  cache: pip
  before_install: false
  install: pip install moban
  before_script: false
  script: .ci/check_moban.sh
  after_success: false
  after_failure: false
  if: branch = master AND type = push
